[{"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js":"1","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js":"2","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js":"3","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js":"4","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js":"5","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js":"6","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js":"7","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js":"8","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js":"9","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js":"10","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js":"11","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js":"12","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js":"13","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js":"14","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js":"15","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js":"16","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js":"17","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/index.js":"18","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/UserContext.js":"19","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/index.js":"20","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/MusicContext.js":"21","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ExUploads.js":"22","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/SearchUploads.js":"23","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadDialog.js":"24","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/theme.js":"25"},{"size":307,"mtime":1607582914820,"results":"26","hashOfConfig":"27"},{"size":1482,"mtime":1608163088901,"results":"28","hashOfConfig":"27"},{"size":5298,"mtime":1608171767113,"results":"29","hashOfConfig":"27"},{"size":5748,"mtime":1608111812480,"results":"30","hashOfConfig":"27"},{"size":1412,"mtime":1608027292695,"results":"31","hashOfConfig":"27"},{"size":2791,"mtime":1608169533576,"results":"32","hashOfConfig":"27"},{"size":4676,"mtime":1608167718030,"results":"33","hashOfConfig":"27"},{"size":3885,"mtime":1608167931828,"results":"34","hashOfConfig":"27"},{"size":133,"mtime":1607628408423,"results":"35","hashOfConfig":"27"},{"size":1461,"mtime":1607910730085,"results":"36","hashOfConfig":"27"},{"size":5246,"mtime":1608174469881,"results":"37","hashOfConfig":"27"},{"size":115,"mtime":1607630245592,"results":"38","hashOfConfig":"27"},{"size":1732,"mtime":1608063271242,"results":"39","hashOfConfig":"27"},{"size":7142,"mtime":1608169387986,"results":"40","hashOfConfig":"27"},{"size":3227,"mtime":1608111633891,"results":"41","hashOfConfig":"27"},{"size":1100,"mtime":1608002341941,"results":"42","hashOfConfig":"27"},{"size":1235,"mtime":1607919154963,"results":"43","hashOfConfig":"27"},{"size":126,"mtime":1607935139707,"results":"44","hashOfConfig":"27"},{"size":1166,"mtime":1608099228922,"results":"45","hashOfConfig":"27"},{"size":130,"mtime":1607935142997,"results":"46","hashOfConfig":"27"},{"size":1004,"mtime":1608109753397,"results":"47","hashOfConfig":"27"},{"size":2462,"mtime":1608108819794,"results":"48","hashOfConfig":"27"},{"size":2288,"mtime":1608107846764,"results":"49","hashOfConfig":"27"},{"size":989,"mtime":1608159691328,"results":"50","hashOfConfig":"27"},{"size":1011,"mtime":1608171954080,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1c49nih",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js",[],["109","110"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js",["111"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js",["112"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js",["113","114"],"import { Button,\n        Grid,\n        Input,\n        makeStyles,\n        Switch,\n        TextField,\n        Typography } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport UploadModel from '../models/upload';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { UserContext } from './userContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  div: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n}));\n\nconst UploadForm = (props) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  \n  const { user, currentUser} = useContext(UserContext);\n  \n  const [name, setName] = useState('');\n  const [album, setAlbum] = useState('');\n  const [artwork, setArtwork] = useState('');\n  const [artist, setArtist] = useState('');\n  const [music, setMusic] = useState('');\n  const [labelId, setLabelId] = useState('');\n  const [genre, setGenre] = useState('');\n  const [isPublic, setIsPublic] = useState(true);\n  const [loading, setLoading] = useState(false);\n  \n  let location = useLocation();\n\n  const uploadArtwork = async () => {\n    const files = artwork\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_album')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/image/upload`,\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    let file = await res.json()\n    file = await file.secure_url\n    setLoading(false)\n    return file\n  }\n\n  const uploadMusic = async () => {\n    const files = music\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_music')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/raw/upload`,\n      \n      {\n        method: 'POST',\n        body: data\n      }\n      )\n      let file = await res.json()\n      file = await file.secure_url\n      return file\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const music = await uploadMusic();\n    const artwork = await uploadArtwork();\n    if(name && artist && album && genre && music && artwork) {\n      const userId = localStorage.getItem(\"id\");\n      UploadModel.create({ userId, labelId, name, music, artist, album, isPublic, genre, artwork })\n      props.setOpenUploadDialog(false)\n      if (location.pathname === '/music/mine') {\n        window.location.reload()\n      } else {\n        return history.push('/music/mine')\n      }\n    } else {\n      console.log(\"Please make sure all fields are full and files are uploaded.\")\n    }\n  }\n\n  return (\n    <div className={ classes.div }>\n      <form className={ classes.form } action=\"\" id=\"uploadForm\">\n        <div aria-label=\"Entry title textfield\">\n          <TextField \n            id=\"outlined-basic\" \n            label=\"track name\"\n            type=\"text\"\n            value={ name }\n            onInput={ (e) => setName(e.target.value) }\n            variant=\"outlined\" \n          />\n        </div>\n\n        <div aria-label=\"artist\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"artist name\"\n            value={ artist }\n            type=\"text\"\n            onInput={ (e) => setArtist(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n        \n        <div aria-label=\"album\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"album name\"\n            value={ album }\n            type=\"text\"\n            onInput={ (e) => setAlbum(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"genre\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"genre\"\n            value={ genre }\n            type=\"text\"\n            onInput={ (e) => setGenre(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"labelId\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"label id\"\n            value={labelId}\n            type=\"text\"\n            onInput={ (e) => setLabelId(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <Typography variant=\"body1\">music file (mp3 only)</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload music\"\n          onChange={ (e) => setMusic(e.target.files) }\n        />\n\n        <Typography variant=\"body1\">album artwork</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload album artwork\"\n          onChange={ (e) => setArtwork(e.target.files) }\n        />\n\n        <Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>private</Grid>\n            <Grid item>\n              <Switch\n                checked={ isPublic }\n                onChange={ () => setIsPublic(!isPublic) }\n                color=\"primary\"\n                name=\"privacy\"\n                label=\"publicOrPrivate\"\n              />\n            </Grid>\n            <Grid item>public</Grid>\n          </Grid>\n        </Grid>\n        <Button\n          onClick={ handleSubmit }\n        >\n          submit\n        </Button>\n      </form>\n\n      { loading ? (\n        <Typography>loading...</Typography>\n      ): (\n        <Typography>success!</Typography>\n      )\n      }\n    </div>\n  )\n}\n\nexport default UploadForm","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js",["115"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js",["116"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js",["117","118"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js",["119","120","121","122"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js",["123","124"],"import { Card,\n        CardMedia,\n        Grid,\n        IconButton,\n        makeStyles, \n        Typography,\n      } from '@material-ui/core';\nimport React, { useContext, useEffect, useRef, useState } from 'react'\nimport UploadModel from '../models/upload';\nimport { UserContext } from './userContext';\nimport { MusicContext } from './musicContext';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst UserMusic = (props) => {\n  const classes = useStyles();\n\n  const Ref = useRef();\n\n  const { user, currentUser} = useContext(UserContext);\n  const { setIsPaused,\n          setNumber,\n          uploads,\n          setReady\n        } = useContext(MusicContext);\n\n  const [userUploads, setUserUploads] = useState([]);\n\n  useEffect(() => {\n      UploadModel.user(currentUser)\n        .then(data => {\n          setUserUploads(data.uploads)\n        })\n  }, [currentUser])\n  \n  const handleUploadDelete = async (uploadId) => {\n    UploadModel.delete(user, uploadId)\n    window.location.reload()\n  }\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h6\"\n      style={{padding: 20}}\n      >\n        { user.artistName }'s music\n      </Typography>\n      { (userUploads !== '') ? (\n        userUploads.map((upload) => (\n        <Card\n          className={ classes.Card }\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id }>\n          { upload.name }\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist }>\n            { upload.artist }\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album }>\n            { upload.album }\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={ () => handleUploadDelete(upload.id) } >\n              <DeleteIcon />\n            </IconButton>\n          </>  \n        </Card>\n      ))\n      ) : (\n        <Typography variant=\"h6\">no uploads, yet.</Typography>\n      )\n      }\n    </div>\n  )\n}\n\nexport default UserMusic\n","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js",[],["125","126"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/index.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/UserContext.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/index.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/MusicContext.js",["127"],"import React, { createContext,\n              useEffect,\n              useRef,\n              useState\n            } from \"react\";\nimport UploadModel from \"../../models/upload\";\n\nexport const Context = createContext({});\n\nexport const Provider = ({ children }) => {\n  const Ref = useRef();\n\n  const [number, setNumber] = useState(0);\n  const [upload, setUpload] = useState('');\n  const [uploads, setUploads] = useState();\n  const [isPaused, setIsPaused] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [isChanged, setIsChanged] = useState(false);\n\n  useEffect(() => {\n    UploadModel.index()\n      .then(data => {\n        setUploads(data.uploads)\n      })\n  }, [number, isChanged])\n\n\n  const musicContext = {\n    upload, setUpload,\n    uploads, setUploads,\n    number, setNumber,\n    isPaused, setIsPaused,\n    ready, setReady,\n    isChanged, setIsChanged\n  }\n\n  return <Context.Provider value={ musicContext }>{ children }</Context.Provider>;\n}\n\nexport const { Consumer } = Context;","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ExUploads.js",["128","129"],"import { Button, \n  Card,\n  CardMedia,\n  Grid,\n  IconButton,\n  makeStyles, \n  Typography,\n} from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport React, { useContext, useEffect, useState } from 'react';\nimport UploadModel from '../models/upload';\nimport { MusicContext } from './musicContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst ExUploads = () => {\n  const classes = useStyles();\n\n  const { uploads,\n          setIsPaused, \n          setNumber,\n          setReady,\n        } = useContext(MusicContext);\n\n  const [exUploads, setExUploads] = useState([])\n\n  useEffect(() => {\n    UploadModel.random()\n    .then(data => {\n      setExUploads(data.uploads)\n    })\n  }, [])\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n    { exUploads && exUploads.map((upload) => (\n      <Card\n          className={classes.Card}\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id }>\n            { upload.name }\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist }>\n            { upload.artist }\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album }>\n            { upload.album }\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n          </>  \n        </Card>\n    ))\n    }\n    </div>\n  )\n}\n\nexport default ExUploads","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/SearchUploads.js",["130"],"import { Button, \n  Card,\n  CardMedia,\n  IconButton,\n  makeStyles, \n  Typography,\n} from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport React, { useContext } from 'react';\nimport { MusicContext } from './musicContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst SearchUploads = (props) => {\n  const classes = useStyles();\n\n  const { uploads,\n          setIsPaused, \n          setNumber,\n          setReady\n        } = useContext(MusicContext);\n\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n    { props.searchUploads && props.searchUploads.map((upload) => (\n      <Card\n          className={classes.Card}\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id } gutterBottom>\n          {upload.name}\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist } gutterBottom>\n            {upload.artist}\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album } gutterBottom>\n            {upload.album}\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n          </>  \n        </Card>\n    ))\n    }\n    </div>\n  )\n}\n\nexport default SearchUploads","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadDialog.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/theme.js",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":110,"column":25,"nodeType":"141","endLine":113,"endColumn":27},{"ruleId":"135","severity":1,"message":"142","line":36,"column":11,"nodeType":"137","messageId":"138","endLine":36,"endColumn":15},{"ruleId":"135","severity":1,"message":"143","line":36,"column":17,"nodeType":"137","messageId":"138","endLine":36,"endColumn":28},{"ruleId":"135","severity":1,"message":"144","line":1,"column":29,"nodeType":"137","messageId":"138","endLine":1,"endColumn":38},{"ruleId":"135","severity":1,"message":"145","line":62,"column":35,"nodeType":"137","messageId":"138","endLine":62,"endColumn":49},{"ruleId":"146","severity":1,"message":"147","line":29,"column":7,"nodeType":"148","messageId":"149","endLine":29,"endColumn":13},{"ruleId":"135","severity":1,"message":"150","line":86,"column":10,"nodeType":"137","messageId":"138","endLine":86,"endColumn":17},{"ruleId":"135","severity":1,"message":"151","line":54,"column":10,"nodeType":"137","messageId":"138","endLine":54,"endColumn":21},{"ruleId":"135","severity":1,"message":"152","line":55,"column":10,"nodeType":"137","messageId":"138","endLine":55,"endColumn":20},{"ruleId":"135","severity":1,"message":"153","line":57,"column":10,"nodeType":"137","messageId":"138","endLine":57,"endColumn":18},{"ruleId":"135","severity":1,"message":"154","line":57,"column":20,"nodeType":"137","messageId":"138","endLine":57,"endColumn":31},{"ruleId":"135","severity":1,"message":"155","line":3,"column":9,"nodeType":"137","messageId":"138","endLine":3,"endColumn":13},{"ruleId":"135","severity":1,"message":"156","line":45,"column":9,"nodeType":"137","messageId":"138","endLine":45,"endColumn":12},{"ruleId":"131","replacedBy":"157"},{"ruleId":"133","replacedBy":"158"},{"ruleId":"135","severity":1,"message":"156","line":11,"column":9,"nodeType":"137","messageId":"138","endLine":11,"endColumn":12},{"ruleId":"135","severity":1,"message":"159","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":16},{"ruleId":"135","severity":1,"message":"155","line":4,"column":3,"nodeType":"137","messageId":"138","endLine":4,"endColumn":7},{"ruleId":"135","severity":1,"message":"159","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":16},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'useEffect' is defined but never used.","'setCurrentUser' is assigned a value but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'loading' is assigned a value but never used.","'currentTime' is assigned a value but never used.","'scrubValue' is assigned a value but never used.","'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'Grid' is defined but never used.","'Ref' is assigned a value but never used.",["160"],["161"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]