[{"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js":"1","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js":"2","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js":"3","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js":"4","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js":"5","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js":"6","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js":"7","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js":"8","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js":"9","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js":"10","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js":"11","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js":"12","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js":"13","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js":"14","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js":"15","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js":"16","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js":"17","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/index.js":"18","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/UserContext.js":"19","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/index.js":"20","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/MusicContext.js":"21","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ExUploads.js":"22","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/SearchUploads.js":"23","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadDialog.js":"24","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UpdateUploadForm.js":"25","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/theme.js":"26"},{"size":307,"mtime":1607582914820,"results":"27","hashOfConfig":"28"},{"size":1037,"mtime":1608113821639,"results":"29","hashOfConfig":"28"},{"size":4201,"mtime":1608114143769,"results":"30","hashOfConfig":"28"},{"size":5748,"mtime":1608111812480,"results":"31","hashOfConfig":"28"},{"size":1412,"mtime":1608027292695,"results":"32","hashOfConfig":"28"},{"size":2926,"mtime":1608093000526,"results":"33","hashOfConfig":"28"},{"size":2829,"mtime":1607922521708,"results":"34","hashOfConfig":"28"},{"size":2220,"mtime":1607965726009,"results":"35","hashOfConfig":"28"},{"size":133,"mtime":1607628408423,"results":"36","hashOfConfig":"28"},{"size":1461,"mtime":1607910730085,"results":"37","hashOfConfig":"28"},{"size":4099,"mtime":1608093933133,"results":"38","hashOfConfig":"28"},{"size":115,"mtime":1607630245592,"results":"39","hashOfConfig":"28"},{"size":1732,"mtime":1608063271242,"results":"40","hashOfConfig":"28"},{"size":7124,"mtime":1608109118669,"results":"41","hashOfConfig":"28"},{"size":3227,"mtime":1608111633891,"results":"42","hashOfConfig":"28"},{"size":1100,"mtime":1608002341941,"results":"43","hashOfConfig":"28"},{"size":1235,"mtime":1607919154963,"results":"44","hashOfConfig":"28"},{"size":126,"mtime":1607935139707,"results":"45","hashOfConfig":"28"},{"size":1166,"mtime":1608099228922,"results":"46","hashOfConfig":"28"},{"size":130,"mtime":1607935142997,"results":"47","hashOfConfig":"28"},{"size":1004,"mtime":1608109753397,"results":"48","hashOfConfig":"28"},{"size":2462,"mtime":1608108819794,"results":"49","hashOfConfig":"28"},{"size":2288,"mtime":1608107846764,"results":"50","hashOfConfig":"28"},{"size":996,"mtime":1608106396951,"results":"51","hashOfConfig":"28"},{"size":6059,"mtime":1608104867695,"results":"52","hashOfConfig":"28"},{"size":497,"mtime":1608113832412,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1c49nih",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js",[],["119","120"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js",["121","122","123"],"import { Button, \n        Grid,\n        IconButton,\n        Menu,\n        MenuItem,\n        Tooltip,\n        Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AccountCircle } from '@material-ui/icons';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from './userContext';\nimport logo from '../assets/greyscaleicon.png'\nimport UploadDialog from './UploadDialog';\nimport UploadForm from './UploadForm';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  homeButton: {\n    marginRight: '2rem',\n  },\n  profileButton: {\n    marginLeft: '1rem'\n  },\n  newEntryButton: {\n    marginRight: '1rem'\n  },\n\n}));\n\nconst NavBar = (props) => {\n  const classes = useStyles();\n\n  const { user, setUser, currentUser, logout } = useContext(UserContext);\n  \n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const [openUploadDialog, setOpenUploadDialog] = useState(false);\n  \n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null)\n  };\n\n  return (\n      <Grid\n        container\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"center\"\n        verticalAlign=\"center\"\n      >\n      <Link to={'/'}>\n        <Tooltip title='home'>\n          <Button className={ classes.button }>\n            <img\n            src={ logo }\n            alt=\"greyscale logo/home button\"\n            style={{\n              width: 40\n            }}\n            />\n          </Button>\n        </Tooltip>\n      </Link>\n        { currentUser ? (\n          <>\n            <Tooltip title=\"menu\">\n              <IconButton\n                className={ classes.profileButton }\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={ handleMenu }\n                color=\"inherit\"\n              >\n                { user && user.image ? (\n                  <>\n                    <img\n                    src={user.image}\n                    width={40}\n                    />\n                  </>\n            \n                )\n                :\n                  <>\n                    <AccountCircle />\n                  </>\n                }\n              </IconButton>\n            </Tooltip>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={ anchorEl }\n              anchorOrigin={{\n                horizontal: 'right'\n              }}\n              keepMounted\n              transformOrigin={{\n                horizontal: 'right',\n              }}\n              open={ open }\n              onClose={ handleClose }\n            >\n              <MenuItem component={ Link } to={ '/music/mine' } onClick={ handleClose }>\n                music\n              </MenuItem>\n              <MenuItem component={ Link } to={ '/profile' } onClick={ handleClose }>\n                profile\n              </MenuItem>\n              <MenuItem component={ Link } to={ '/logout' } onChange={ handleClose } onClick={ logout }>\n                logout\n              </MenuItem>\n            </Menu>\n            <Button\n              onClick={ () => setOpenUploadDialog(true) }\n            >\n              upload\n            </Button>\n            <UploadDialog\n              openUploadDialog={ openUploadDialog }\n              setOpenUploadDialog={ setOpenUploadDialog }\n            >\n              <UploadForm\n                setOpenUploadDialog={ setOpenUploadDialog }\n              />\n            </UploadDialog>\n          </>\n        ): (\n          <>\n            <Link to={ \"/login\" }>\n              <Button\n                style={{textTransform: 'none'}}\n              >\n                login\n              </Button>\n            </Link>\n            <Typography variant=\"h4\"> | </Typography>\n            <Link to={ \"/register\" }>\n              <Button\n                style={{textTransform: 'none'}}\n              >\n                register\n              </Button>\n            </Link>\n          </>\n        )}\n      </Grid>\n  )\n}\n\nexport default NavBar","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js",["124","125"],"import { Button,\n        Grid,\n        Input,\n        makeStyles,\n        Switch,\n        TextField,\n        Typography } from '@material-ui/core';\nimport React, { useContext, useState } from 'react';\nimport UploadModel from '../models/upload';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { UserContext } from './userContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  div: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n}));\n\nconst UploadForm = (props) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n  \n  const { user, currentUser} = useContext(UserContext);\n  \n  const [name, setName] = useState('');\n  const [album, setAlbum] = useState('');\n  const [artwork, setArtwork] = useState('');\n  const [artist, setArtist] = useState('');\n  const [music, setMusic] = useState('');\n  const [labelId, setLabelId] = useState('');\n  const [genre, setGenre] = useState('');\n  const [isPublic, setIsPublic] = useState(true);\n  const [loading, setLoading] = useState(false);\n  \n  let location = useLocation();\n\n  const uploadArtwork = async () => {\n    const files = artwork\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_album')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/image/upload`,\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    let file = await res.json()\n    file = await file.secure_url\n    setLoading(false)\n    return file\n  }\n\n  const uploadMusic = async () => {\n    const files = music\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_music')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/raw/upload`,\n      \n      {\n        method: 'POST',\n        body: data\n      }\n      )\n      let file = await res.json()\n      file = await file.secure_url\n      return file\n  }\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const music = await uploadMusic();\n    const artwork = await uploadArtwork();\n    if(name && artist && album && genre && music && artwork) {\n      const userId = localStorage.getItem(\"id\");\n      UploadModel.create({ userId, labelId, name, music, artist, album, isPublic, genre, artwork })\n      props.setOpenUploadDialog(false)\n      if (location.pathname === '/music/mine') {\n        window.location.reload()\n      } else {\n        return history.push('/music/mine')\n      }\n    } else {\n      console.log(\"Please make sure all fields are full and files are uploaded.\")\n    }\n  }\n\n  return (\n    <div className={ classes.div }>\n      <form className={ classes.form } action=\"\" id=\"uploadForm\">\n        <div aria-label=\"Entry title textfield\">\n          <TextField \n            id=\"outlined-basic\" \n            label=\"track name\"\n            type=\"text\"\n            value={ name }\n            onInput={ (e) => setName(e.target.value) }\n            variant=\"outlined\" \n          />\n        </div>\n\n        <div aria-label=\"artist\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"artist name\"\n            value={ artist }\n            type=\"text\"\n            onInput={ (e) => setArtist(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n        \n        <div aria-label=\"album\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"album name\"\n            value={ album }\n            type=\"text\"\n            onInput={ (e) => setAlbum(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"genre\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"genre\"\n            value={ genre }\n            type=\"text\"\n            onInput={ (e) => setGenre(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"labelId\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"label id\"\n            value={labelId}\n            type=\"text\"\n            onInput={ (e) => setLabelId(e.target.value) }\n            variant=\"outlined\"\n          />\n        </div>\n\n        <Typography variant=\"body1\">music file (mp3 only)</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload music\"\n          onChange={ (e) => setMusic(e.target.files) }\n        />\n\n        <Typography variant=\"body1\">album artwork</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload album artwork\"\n          onChange={ (e) => setArtwork(e.target.files) }\n        />\n\n        <Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>private</Grid>\n            <Grid item>\n              <Switch\n                checked={ isPublic }\n                onChange={ () => setIsPublic(!isPublic) }\n                color=\"primary\"\n                name=\"privacy\"\n                label=\"publicOrPrivate\"\n              />\n            </Grid>\n            <Grid item>public</Grid>\n          </Grid>\n        </Grid>\n        <Button\n          onClick={ handleSubmit }\n        >\n          submit\n        </Button>\n      </form>\n\n      { loading ? (\n        <Typography>loading...</Typography>\n      ): (\n        <Typography>success!</Typography>\n      )\n      }\n    </div>\n  )\n}\n\nexport default UploadForm","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js",["126"],"import React, { useContext, useEffect, useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExUploads from '../components/ExUploads';\nimport { UserContext } from '../components/userContext';\nimport { fade, IconButton, InputBase, makeStyles } from '@material-ui/core';\nimport SearchUploads from '../components/SearchUploads';\nimport UploadModel from '../models/upload';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nconst Home = (props) => {\n  const classes = useStyles();\n\n  const { currentUser } = useContext(UserContext);\n  const [searchInput, setSearchInput] = useState('');\n  const [searchUploads, setSearchUploads] = useState();\n\n  async function searchTerm(e) {\n    e.preventDefault();\n\n    try {\n      const data = await UploadModel.search(searchInput)\n        setSearchUploads(data.uploads)\n        setSearchInput('')\n    }\n    catch (err) {\n      console.log(err)\n    }\n  }\n\n  return (\n    <div>\n      { currentUser ? (\n        <>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n            </div>\n            <form\n              onSubmit={ searchTerm }\n              noValidate\n            >\n              <InputBase\n                placeholder=\"search for music...\"\n                onChange= { (e) => { setSearchInput(e.target.value) } }\n                value={ searchInput }\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n              />\n              <IconButton type=\"submit\">\n                <SearchIcon />\n              </IconButton>\n            </form>\n          </div>\n          {\n\n          }\n          <SearchUploads \n            searchUploads={ searchUploads }\n            setSearchUploads= { searchUploads }\n          />\n        </>\n      ) : (\n        <>\n          <ExUploads />\n        </>\n      )\n      }\n    </div>\n  )\n}\n\nexport default Home","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js",["127"],"import React, { useContext, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button,\n        TextField,\n        Typography\n        } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport UserModel from '../models/user';\nimport { UserContext } from '../components/userContext';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n\n  const { storeUser, currentUser, setCurrentUser } = useContext(UserContext);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleEmail = e => {\n    setEmail(e.target.value)\n  }\n\n  const handlePassword = e => {\n    setPassword(e.target.value)\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    \n    UserModel.login({\n      email,\n      password\n    }).then(data => {\n      storeUser(data.user)\n      if(!data.user) {\n        console.log('Login unsuccessful')\n        return false\n      }\n      })\n      .catch(err => console.log('Login error', err))\n  }\n\n  if ( currentUser ) return <Redirect to='/' />\n\n  return (\n    <div>\n      <Typography variant=\"h4\">\n        Login\n      </Typography>\n      <form className={ classes.root } noValidate autoComplete=\"off\" onSubmit={ handleSubmit }>\n        <div className=\"form-group\">\n          <TextField \n            onChange={ handleEmail }\n            value={ email }\n            type=\"email\"\n            id=\"email\" \n            name=\"email\"\n            label=\"Email\" \n            variant=\"filled\" \n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n        <TextField\n          onChange={ handlePassword }\n          value={ password }\n          type=\"password\"\n          id=\"password\"\n          name=\"password\"\n          label=\"password\"\n          variant=\"filled\"\n          required\n        />        \n        </div>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          type=\"submit\"\n        >\n          Login\n        </Button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js",["128"],"import { Button,\n        Grid,\n        Input,\n        Paper,\n        TextField,\n        Typography\n      } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useContext, useState } from 'react';\nimport UserModel from '../models/user';\nimport { UserContext } from '../components/userContext';\nimport ConfirmDialog from '../components/ConfirmDialog';\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 400,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 500,\n    }\n  },\n}))\n\nconst Profile = (props) => {\n  const userId = localStorage.getItem(\"id\");\n\n  const classes = useStyles();\n\n  const { user, setUser, logout } = useContext(UserContext);\n  const [artistName, setArtistName] = useState('');\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n\n\n  const uploadImage = async () => {\n    const files = await image\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_profile')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/image/upload`,\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    let file = await res.json()\n    file = await file.secure_url\n    return file\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const image = await uploadImage();\n    UserModel.update({ artistName, image }, userId)\n    .then( (data) => {\n      setUser({\n        artistName,\n        image\n      })\n    });\n  }\n\n  const handleDelete = () => {\n    UserModel.delete(user, userId)\n      .then(\n        logout()\n      )\n  }\n\n  return (\n    <div>\n        <Paper\n          className={ classes.paper }\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n          <Typography>\n            { user && user.artistName }\n          </Typography>\n\n            <form\n                noValidate \n                autoComplete=\"off\"\n                onSubmit={ handleSubmit }\n            >\n\n              <div aria-label=\"artist name textfield\">\n                <TextField\n                  className={ classes.field }\n                  id=\"outlined-multiline-static\"\n                  label=\"artist name\"\n                  type=\"text\"\n                  value={ artistName }\n                  defaultValue={ user && user.artistName }\n                  onInput={ e => setArtistName(e.target.value) }\n                  variant=\"outlined\" \n                />\n              </div>\n\n              <Typography variant=\"body1\">profile picture</Typography>\n              <Input\n                type=\"file\"\n                name=\"file\"\n                placeholder=\"upload profile picture\"\n                onChange={ e => { setImage(e.target.files) } }\n              />\n\n              <Button\n                type=\"submit\"\n                className={ classes.button  }\n              >\n                submit\n              </Button>\n            </form>\n            { loading ? (\n              <Typography>loading...</Typography>\n            ): (\n              <>\n              <img src={ image && image } alt=\"profile picture\" style={{ width: \"200px\" }}/>\n              </>\n            )\n            }\n            <Button aria-label=\"delete\" onClick={ () => setConfirmOpen(true) }>\n              delete account\n            </Button>\n            <ConfirmDialog\n              title=\"delete acount?\"\n              open={ confirmOpen }\n              setOpen={ setConfirmOpen }\n              onConfirm={ handleDelete }\n            >\n              are you sure you want to delete your account?\n            </ConfirmDialog>\n          </Grid>\n        </Paper>\n    </div>\n  )\n}\n\nexport default Profile","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js",["129","130","131","132"],"import React, { useContext,\n              useRef,\n              useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport { MusicContext } from '../components/musicContext';\nimport { Grid, Input, Slider } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  }\n}));\n\nconst Player = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const Ref = useRef();\n\n  const { uploads,\n          isPaused, setIsPaused,\n          number, setNumber,\n          ready, setReady\n        } = useContext(MusicContext);\n\n  const [value, setValue] = useState(40);\n  const [interval] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [scrubValue, setScrubValue] = useState(0);\n  const [progress, setProgress] = useState(null);\n  const [duration, setDuration] = useState(null);\n  const [autoPlay, setAutoPlay] = useState(false);\n\n  // come back to this!\n  const handleScrubChange = async (e, newValue) => {\n    // scrubValue = await Ref.current.currentTime\n    setProgress(newValue)\n    setCurrentTime(progress)\n  };\n\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n    Ref.current.volume = value * .01\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value === '' ? '' : Number(e.target.value));\n    Ref.current.volume = e.target.value * .01\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n\n  const handlePlay = () => {\n    Ref.current.play()\n    setIsPaused(false)\n    setAutoPlay(true)\n    setInterval(() => {\n      setCurrentTime(Ref.current.currentTime);\n      setProgress(Math.round((Ref.current.currentTime / Ref.current.duration) * 100))\n      setScrubValue(progress)\n    }, 100);\n  }\n\n  const handlePause = () => {\n    clearInterval(interval)\n    Ref.current.pause()\n    setIsPaused(true)\n  }\n\n  const handlePrev = () => {\n    setReady(false)\n    if (number > 0) {\n      setNumber(number - 1)\n      setIsPaused(false)\n    } else if (number === 0) {\n      setIsPaused(false)\n    } else {\n      setNumber(0)\n    }\n  }\n\n  const handleNext = () => {\n    setReady(false)\n    if (number < uploads.length - 1) {\n      setNumber(number + 1)\n      setIsPaused(false)\n    } else {\n      setNumber(uploads.length - 1)\n    }\n  }\n\n  const getTime = (time) => {\n    if (ready) {\n      let hours = Math.floor(time / 3600)\n      let minutes = Math.floor((time % 3600) / 60)\n      let seconds = Math.floor(time % 60)\n  \n      let songTime = '';\n      if (hours > 0) {\n        songTime += `${hours}:${minutes < 10 ? '0': ''}`\n      }\n  \n      songTime += `${minutes}:${seconds < 10 ? '0': ''}`\n      songTime += `${seconds}`\n      return songTime\n    }\n  }\n\n  return (\n    <Card className={ classes.root }>\n      <div className={ classes.details }>\n        <CardContent className={ classes.content }>\n          <Typography component=\"h6\" variant=\"h6\">\n            { uploads && ready && uploads[number].name }\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            { uploads && uploads[number].artist }\n          </Typography>\n        </CardContent>\n        <div className={ classes.controls }>\n          <IconButton aria-label=\"previous\">\n            { theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon onClick={ handlePrev } /> }\n          </IconButton>\n          <audio\n            id=\"song\"\n            ref={ Ref }\n            src={ uploads && uploads[number].music }\n            onLoadedData={ () => setReady(true) }\n            currentTime=\"seconds\"\n            autoPlay={ autoPlay }\n          />\n          <IconButton \n            aria-label=\"play/pause\"\n            onClick={ isPaused ? handlePlay : handlePause }\n          >\n            { !isPaused ? (\n              <PauseIcon\n                fontSize=\"medium\"\n                className={ classes.pauseIcon } \n              />\n            ) : (\n              <PlayArrowIcon\n                fontSize=\"medium\"\n                className={ classes.playIcon }\n              />\n            )\n            }\n          </IconButton>\n          <IconButton aria-label=\"next\">\n            { theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon onClick={ handleNext }/>}\n          </IconButton>\n        </div>\n      </div>\n        <CardMedia\n          className={ classes.cover }\n          image={ uploads && uploads[number].artwork }\n          title={ uploads && uploads[number].name }\n        />\n      <div>\n        <Grid\n          container\n        >\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VolumeUp />\n            </Grid>\n            <Grid item xs>\n              <Slider\n                value={ typeof value === 'number' ? value : 0 }\n                onChange={ handleSliderChange }\n                aria-labelledby=\"volume-slider\"\n              />\n            </Grid>\n            <Grid item>\n              <Input\n                className={ classes.input }\n                value={ value }\n                margin=\"dense\"\n                onChange={ handleInputChange }\n                onBlur={ handleBlur }\n                inputProps={{\n                  step: 10,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'progress-bar',\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n            container\n          >\n          <Grid container spacing={2}>\n            <Grid item>\n              <Typography variant=\"body1\">\n                { ready && uploads ? getTime(progress): \"\" }\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Slider \n                value={ progress }\n                onChange={ handleScrubChange }\n                max={ ready && uploads ? Ref.current.duration: 0 }\n                aria-labelledby=\"continuous-slider\" />\n            </Grid>\n            <Typography \n              variant=\"body1\"\n            >\n              { ready && uploads ? getTime(Ref.current.duration): \"\" }\n            </Typography>\n          </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n}\n\nexport default Player","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js",["133","134"],"import { Card,\n        CardMedia,\n        Grid,\n        IconButton,\n        makeStyles, \n        Typography,\n      } from '@material-ui/core';\nimport React, { useContext, useEffect, useRef, useState } from 'react'\nimport UploadModel from '../models/upload';\nimport { UserContext } from './userContext';\nimport { MusicContext } from './musicContext';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst UserMusic = (props) => {\n  const classes = useStyles();\n\n  const Ref = useRef();\n\n  const { user, currentUser} = useContext(UserContext);\n  const { setIsPaused,\n          setNumber,\n          uploads,\n          setReady\n        } = useContext(MusicContext);\n\n  const [userUploads, setUserUploads] = useState([]);\n\n  useEffect(() => {\n      UploadModel.user(currentUser)\n        .then(data => {\n          setUserUploads(data.uploads)\n        })\n  }, [currentUser])\n  \n  const handleUploadDelete = async (uploadId) => {\n    UploadModel.delete(user, uploadId)\n    window.location.reload()\n  }\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h6\"\n      style={{padding: 20}}\n      >\n        { user.artistName }'s music\n      </Typography>\n      { (userUploads !== '') ? (\n        userUploads.map((upload) => (\n        <Card\n          className={ classes.Card }\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id }>\n          { upload.name }\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist }>\n            { upload.artist }\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album }>\n            { upload.album }\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n            <IconButton aria-label=\"delete\" onClick={ () => handleUploadDelete(upload.id) } >\n              <DeleteIcon />\n            </IconButton>\n          </>  \n        </Card>\n      ))\n      ) : (\n        <Typography variant=\"h6\">no uploads, yet.</Typography>\n      )\n      }\n    </div>\n  )\n}\n\nexport default UserMusic\n","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js",[],["135","136"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/index.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/userContext/UserContext.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/index.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/musicContext/MusicContext.js",["137"],"import React, { createContext,\n              useEffect,\n              useRef,\n              useState\n            } from \"react\";\nimport UploadModel from \"../../models/upload\";\n\nexport const Context = createContext({});\n\nexport const Provider = ({ children }) => {\n  const Ref = useRef();\n\n  const [number, setNumber] = useState(0);\n  const [upload, setUpload] = useState('');\n  const [uploads, setUploads] = useState();\n  const [isPaused, setIsPaused] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [isChanged, setIsChanged] = useState(false);\n\n  useEffect(() => {\n    UploadModel.index()\n      .then(data => {\n        setUploads(data.uploads)\n      })\n  }, [number, isChanged])\n\n\n  const musicContext = {\n    upload, setUpload,\n    uploads, setUploads,\n    number, setNumber,\n    isPaused, setIsPaused,\n    ready, setReady,\n    isChanged, setIsChanged\n  }\n\n  return <Context.Provider value={ musicContext }>{ children }</Context.Provider>;\n}\n\nexport const { Consumer } = Context;","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ExUploads.js",["138","139"],"import { Button, \n  Card,\n  CardMedia,\n  Grid,\n  IconButton,\n  makeStyles, \n  Typography,\n} from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport React, { useContext, useEffect, useState } from 'react';\nimport UploadModel from '../models/upload';\nimport { MusicContext } from './musicContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst ExUploads = () => {\n  const classes = useStyles();\n\n  const { uploads,\n          setIsPaused, \n          setNumber,\n          setReady,\n        } = useContext(MusicContext);\n\n  const [exUploads, setExUploads] = useState([])\n\n  useEffect(() => {\n    UploadModel.random()\n    .then(data => {\n      setExUploads(data.uploads)\n    })\n  }, [])\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n    { exUploads && exUploads.map((upload) => (\n      <Card\n          className={classes.Card}\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id }>\n            { upload.name }\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist }>\n            { upload.artist }\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album }>\n            { upload.album }\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n          </>  \n        </Card>\n    ))\n    }\n    </div>\n  )\n}\n\nexport default ExUploads","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/SearchUploads.js",["140"],"import { Button, \n  Card,\n  CardMedia,\n  IconButton,\n  makeStyles, \n  Typography,\n} from '@material-ui/core';\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\nimport React, { useContext } from 'react';\nimport { MusicContext } from './musicContext';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexDirection: 'column',\n    wordWrap: 'break-word',\n    justifyItems: 'center',\n    flexGrow: 1,\n    '& > *': {\n      margin: theme.spacing(.7),\n    },\n  },\n  card: {\n    width: 300,\n    [theme.breakpoints.down('sm')]: {\n      width: 300,\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 700,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 1200\n    }\n  },\n  cover: {\n    width: 151,\n  },\n}))\n\nconst SearchUploads = (props) => {\n  const classes = useStyles();\n\n  const { uploads,\n          setIsPaused, \n          setNumber,\n          setReady\n        } = useContext(MusicContext);\n\n\n  const selectTrack = (uploadName) => {\n    for (let i = 0; i < uploads.length; i++) {\n      if (uploads[i].name === uploadName) {\n        setNumber(i)\n        setReady(false)\n      } else {\n        continue\n      }\n    }\n    setIsPaused(false)\n  }\n\n  return (\n    <div>\n    { props.searchUploads && props.searchUploads.map((upload) => (\n      <Card\n          className={classes.Card}\n          elevation={1}\n          style={{\n          display:\"inline-block\",\n          textAlign: \"center\",\n          padding: 30\n          }}\n        >\n          <Typography component=\"h3\" variant=\"h6\" key={ upload.id } gutterBottom>\n          {upload.name}\n          </Typography>\n          <Typography component=\"h5\" variant=\"body1\" key={ upload.artist } gutterBottom>\n            {upload.artist}\n          </Typography>\n          <Typography compoment=\"p\" variant=\"body1\" key={ upload.album } gutterBottom>\n            {upload.album}\n          </Typography>\n          <CardMedia\n            className={ classes.cover }\n            component=\"img\"\n            image={ upload.artwork }\n            title={ upload.name }\n          />\n          <>\n            <IconButton onClick={ () => selectTrack(upload.name) }>\n              <PlayCircleFilledIcon />\n            </IconButton>\n          </>  \n        </Card>\n    ))\n    }\n    </div>\n  )\n}\n\nexport default SearchUploads","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadDialog.js",["141"],"import React from 'react';\nimport { \n              Dialog, \n              DialogTitle, \n              DialogContent,\n              Typography, \n              IconButton,\n            } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close'\n\n\nconst UploadDialog = (props) => {\n\n  const { title, children, openUploadDialog, setOpenUploadDialog } = props;\n\n  return (\n    <Dialog open={ openUploadDialog } >\n      <DialogTitle>\n        <div style={{ display: 'flex' }}>\n          <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1, }}>\n            upload a track\n          </Typography>\n          <IconButton\n            variant=\"contained\"\n            aria-label=\"close\"\n            onClick={ () => { setOpenUploadDialog(false) } }\n          >\n            <CloseIcon color=\"action\"/>\n          </IconButton>  \n        </div>\n      </DialogTitle>\n      <DialogContent dividers>\n        {children} \n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default UploadDialog","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UpdateUploadForm.js",["142","143","144"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/theme.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":10,"column":29,"nodeType":"151","messageId":"152","endLine":10,"endColumn":38},{"ruleId":"149","severity":1,"message":"153","line":36,"column":17,"nodeType":"151","messageId":"152","endLine":36,"endColumn":24},{"ruleId":"154","severity":1,"message":"155","line":83,"column":21,"nodeType":"156","endLine":86,"endColumn":23},{"ruleId":"149","severity":1,"message":"157","line":36,"column":11,"nodeType":"151","messageId":"152","endLine":36,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":36,"column":17,"nodeType":"151","messageId":"152","endLine":36,"endColumn":28},{"ruleId":"149","severity":1,"message":"150","line":1,"column":29,"nodeType":"151","messageId":"152","endLine":1,"endColumn":38},{"ruleId":"149","severity":1,"message":"159","line":23,"column":35,"nodeType":"151","messageId":"152","endLine":23,"endColumn":49},{"ruleId":"160","severity":1,"message":"161","line":137,"column":15,"nodeType":"156","endLine":137,"endColumn":93},{"ruleId":"149","severity":1,"message":"162","line":53,"column":10,"nodeType":"151","messageId":"152","endLine":53,"endColumn":21},{"ruleId":"149","severity":1,"message":"163","line":54,"column":10,"nodeType":"151","messageId":"152","endLine":54,"endColumn":20},{"ruleId":"149","severity":1,"message":"164","line":56,"column":10,"nodeType":"151","messageId":"152","endLine":56,"endColumn":18},{"ruleId":"149","severity":1,"message":"165","line":56,"column":20,"nodeType":"151","messageId":"152","endLine":56,"endColumn":31},{"ruleId":"149","severity":1,"message":"166","line":3,"column":9,"nodeType":"151","messageId":"152","endLine":3,"endColumn":13},{"ruleId":"149","severity":1,"message":"167","line":45,"column":9,"nodeType":"151","messageId":"152","endLine":45,"endColumn":12},{"ruleId":"145","replacedBy":"168"},{"ruleId":"147","replacedBy":"169"},{"ruleId":"149","severity":1,"message":"167","line":11,"column":9,"nodeType":"151","messageId":"152","endLine":11,"endColumn":12},{"ruleId":"149","severity":1,"message":"170","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":16},{"ruleId":"149","severity":1,"message":"166","line":4,"column":3,"nodeType":"151","messageId":"152","endLine":4,"endColumn":7},{"ruleId":"149","severity":1,"message":"170","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":16},{"ruleId":"149","severity":1,"message":"171","line":14,"column":11,"nodeType":"151","messageId":"152","endLine":14,"endColumn":16},{"ruleId":"149","severity":1,"message":"157","line":37,"column":11,"nodeType":"151","messageId":"152","endLine":37,"endColumn":15},{"ruleId":"149","severity":1,"message":"158","line":37,"column":17,"nodeType":"151","messageId":"152","endLine":37,"endColumn":28},{"ruleId":"149","severity":1,"message":"172","line":48,"column":10,"nodeType":"151","messageId":"152","endLine":48,"endColumn":17},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setUser' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'setCurrentUser' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'currentTime' is assigned a value but never used.","'scrubValue' is assigned a value but never used.","'duration' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'Grid' is defined but never used.","'Ref' is assigned a value but never used.",["173"],["174"],"'Button' is defined but never used.","'title' is assigned a value but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]