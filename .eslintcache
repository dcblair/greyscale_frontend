[{"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js":"1","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js":"2","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js":"3","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js":"4","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js":"5","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js":"6","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js":"7","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js":"8","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js":"9","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js":"10","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js":"11","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js":"12","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Uploads.js":"13","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js":"14","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js":"15","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js":"16","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/context/index.js":"17","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/context/UserContext.js":"18","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js":"19","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js":"20"},{"size":307,"mtime":1607582914820,"results":"21","hashOfConfig":"22"},{"size":2155,"mtime":1607912527119,"results":"23","hashOfConfig":"22"},{"size":2635,"mtime":1607913918919,"results":"24","hashOfConfig":"22"},{"size":5145,"mtime":1607837677351,"results":"25","hashOfConfig":"22"},{"size":1444,"mtime":1607906979759,"results":"26","hashOfConfig":"22"},{"size":313,"mtime":1607847168048,"results":"27","hashOfConfig":"22"},{"size":2820,"mtime":1607731756205,"results":"28","hashOfConfig":"22"},{"size":2253,"mtime":1607914424647,"results":"29","hashOfConfig":"22"},{"size":133,"mtime":1607628408423,"results":"30","hashOfConfig":"22"},{"size":1461,"mtime":1607910730085,"results":"31","hashOfConfig":"22"},{"size":4177,"mtime":1607919346802,"results":"32","hashOfConfig":"22"},{"size":115,"mtime":1607630245592,"results":"33","hashOfConfig":"22"},{"size":400,"mtime":1607630046035,"results":"34","hashOfConfig":"22"},{"size":1442,"mtime":1607656985853,"results":"35","hashOfConfig":"22"},{"size":5895,"mtime":1607846272360,"results":"36","hashOfConfig":"22"},{"size":3079,"mtime":1607921414770,"results":"37","hashOfConfig":"22"},{"size":126,"mtime":1607905184235,"results":"38","hashOfConfig":"22"},{"size":918,"mtime":1607913497551,"results":"39","hashOfConfig":"22"},{"size":1276,"mtime":1607919167904,"results":"40","hashOfConfig":"22"},{"size":1235,"mtime":1607919154963,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1c49nih",{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/index.js",[],["85","86"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/App.js",["87","88","89","90"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/NavBar.js",["91","92","93","94","95"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UploadForm.js",["96","97"],"import { Button,\n        Grid,\n        Input,\n        Switch,\n        TextField,\n        Typography } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport UploadModel from '../models/upload';\nimport { useHistory } from 'react-router-dom';\n\nconst UploadForm = () => {\n  const history = useHistory();\n\n  const [name, setName] = useState('');\n  const [album, setAlbum] = useState('');\n  const [artwork, setArtwork] = useState('');\n  const [artist, setArtist] = useState('');\n  const [music, setMusic] = useState('');\n  const [labelId, setLabelId] = useState('');\n  const [genre, setGenre] = useState('');\n  const [isPublic, setIsPublic] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const uploadArtwork = async () => {\n    const files = artwork\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_album')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/image/upload`,\n      {\n        method: 'POST',\n        body: data\n      }\n    )\n    const file = await res.json()\n    setArtwork(file.secure_url)\n    setLoading(false)\n  }\n\n  const uploadMusic = async () => {\n    const files = music\n    const data = new FormData()\n    data.append('file', files[0])\n    data.append('upload_preset', 'greyscale_music')\n    setLoading(true)\n    const res = await fetch(\n      `${process.env.REACT_APP_CLOUDINARY_URL}/raw/upload`,\n      \n      {\n        method: 'POST',\n        body: data\n      }\n      )\n      const file = await res.json()\n      setMusic(file.secure_url)\n      setLoading(false)\n  }\n    \n  useEffect(() => {\n    if (typeof music === \"string\" && typeof artwork === \"string\") {\n      const userId = localStorage.getItem(\"id\")\n      UploadModel.create({ userId, labelId, name, music, artist, album, isPublic, genre, artwork })\n    }\n  }, [music, artwork])\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    if(name && artist && album && genre && music && artwork) {\n      await uploadMusic()\n      await uploadArtwork()\n      return history.push('/music/mine')\n    } else {\n      console.log(\"Please make sure all fields are full and files are uploaded.\")\n    }\n  }\n\n  return (\n    <div>\n      <form action=\"\" id=\"uploadForm\">\n        <div aria-label=\"Entry title textfield\">\n          <TextField \n            id=\"outlined-basic\" \n            label=\"track name\"\n            type=\"text\"\n            value={name} \n            onInput={ e => setName(e.target.value)}\n            variant=\"outlined\" \n          />\n        </div>\n\n        <div aria-label=\"artist\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"artist name\"\n            value={artist}\n            type=\"text\"\n            onInput={ e => setArtist(e.target.value)}\n            variant=\"outlined\"\n          />\n        </div>\n        \n        <div aria-label=\"album\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"album name\"\n            value={album}\n            type=\"text\"\n            onInput={ e => setAlbum(e.target.value)}\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"genre\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"genre\"\n            value={genre}\n            type=\"text\"\n            onInput={ e => setGenre(e.target.value)}\n            variant=\"outlined\"\n          />\n        </div>\n\n        <div aria-label=\"labelId\">\n          <TextField\n            id=\"outlined-multiline-static\"\n            label=\"label id\"\n            value={labelId}\n            type=\"text\"\n            onInput={ e => setLabelId(e.target.value)}\n            variant=\"outlined\"\n          />\n        </div>\n\n        <Typography variant=\"body1\">music file</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload music\"\n          onChange={e => {setMusic(e.target.files)} }\n        />\n\n        <Typography variant=\"body1\">album artwork</Typography>\n        <Input\n          type=\"file\"\n          name=\"file\"\n          placeholder=\"upload album artwork\"\n          onChange={e => {setArtwork(e.target.files)} }\n        />\n\n        <Grid>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n            <Grid item>Private</Grid>\n            <Grid item>\n              <Switch\n                checked={isPublic}\n                onChange={() => setIsPublic(!isPublic)}\n                color=\"primary\"\n                name=\"privacy\"\n                label=\"publicOrPrivate\"\n              />\n            </Grid>\n            <Grid item> Public</Grid>\n          </Grid>\n        </Grid>\n        <Button\n          onClick={ handleSubmit }\n        >\n          Submit\n        </Button>\n      </form>\n\n        {loading ? (\n          <Typography>loading...</Typography>\n        ): (\n          <img src={artwork} alt=\"album artwork\" style={{width: \"200px\"}}/>\n        )\n        }\n    </div>\n  )\n}\n\nexport default UploadForm","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/config/Routes.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Home.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Register.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Login.js",["98"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Contact.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/user.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/Profile.js",["99","100","101"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/pages/About.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Uploads.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/models/upload.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/Player.js",["102"],"import React, { useEffect, useRef, useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport UploadModel from '../models/upload';\nimport { Grid, Input, Slider } from '@material-ui/core';\nimport { VolumeUp } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  content: {\n    flex: '1 0 auto',\n  },\n  cover: {\n    width: 151,\n  },\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n  }\n}));\n\nconst Player = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const Ref = useRef();\n\n  const [isPaused, setIsPaused] = useState(true);\n  const [upload, setUpload] = useState('');\n  const [value, setValue] = useState(70);\n  const [scrubValue, setScrubValue] = useState(0);\n  const [number, setNumber] = useState(15);\n  \n  const handleScrubChange = (event, newValue) => {\n    setScrubValue(newValue);\n  };\n\n  // useEffect(() => {\n  //   console.log(Ref.current.currentTime)\n  // }, [Ref.current.currentTime])\n\n  const handleSliderChange = (e, newValue) => {\n    setValue(newValue);\n    Ref.current.volume = value * .01\n    console.log(Ref.current.currentTime)\n  };\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value === '' ? '' : Number(e.target.value));\n    Ref.current.volume = e.target.value * .01\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 100) {\n      setValue(100);\n    }\n  };\n  \n  useEffect(() =>{\n      UploadModel.show(number)\n        .then(data => setUpload(data.upload))\n  }, [number])\n\n  const handlePlay = () => {\n    Ref.current.play()\n    setIsPaused(false)\n  }\n\n  const handlePause = () => {\n    Ref.current.pause()\n    setIsPaused(true)\n  }\n\n  const handlePrev = () => {\n    setNumber(number - 1)\n    setIsPaused(true)\n  }\n\n  const handleNext = () => {\n    setNumber(number + 1)\n    setIsPaused(true)\n  }\n\n  return (\n    <Card className={classes.root}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h6\" variant=\"h6\">\n            {upload.name}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {upload.artist}\n          </Typography>\n        </CardContent>\n        <div className={classes.controls}>\n          <IconButton aria-label=\"previous\">\n            {theme.direction === 'rtl' ? <SkipNextIcon /> : <SkipPreviousIcon onClick={ handlePrev } />}\n          </IconButton>\n          <audio\n            id=\"song\"\n            ref={Ref}\n            src={upload.music}\n            currentTime=\"seconds\"\n          />\n          <IconButton \n            aria-label=\"play/pause\"\n            onClick={ isPaused ? handlePlay : handlePause }\n          >\n            { !isPaused ? (\n              <PauseIcon\n                fontSize=\"medium\"\n                className={ classes.pauseIcon } \n              />\n            ) : (\n              <PlayArrowIcon\n                fontSize=\"medium\"\n                className={ classes.playIcon }\n              />\n            )\n            }\n          </IconButton>\n          <IconButton aria-label=\"next\">\n            { theme.direction === 'rtl' ? <SkipPreviousIcon /> : <SkipNextIcon onClick={ handleNext }/>}\n          </IconButton>\n        </div>\n      </div>\n        <CardMedia\n          className={ classes.cover }\n          image={ upload.artwork }\n          title={ upload.artwork }\n        />\n      <div>\n        <Grid\n          container\n        >\n          <Typography id=\"input-slider\" gutterBottom>\n            Volume\n          </Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <VolumeUp />\n            </Grid>\n            <Grid item xs>\n              <Slider\n                value={typeof value === 'number' ? value : 0}\n                onChange={ handleSliderChange }\n                aria-labelledby=\"input-slider\"\n              />\n            </Grid>\n            <Grid item>\n              <Input\n                className={classes.input}\n                value={value}\n                margin=\"dense\"\n                onChange={ handleInputChange }\n                onBlur={ handleBlur }\n                inputProps={{\n                  step: 10,\n                  min: 0,\n                  max: 100,\n                  type: 'number',\n                  'aria-labelledby': 'input-slider',\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Grid\n          container\n          >\n          <Typography id=\"continuous-slider\" gutterBottom>\n            Scrubbing\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item>\n              <Typography variant=\"body1\">\n                0:00\n              </Typography>\n            </Grid>\n            <Grid item xs>\n              <Slider value={scrubValue} onChange={ handleScrubChange }  aria-labelledby=\"continuous-slider\" />\n            </Grid>\n            <Typography \n              variant=\"body1\"\n            >\n              {Ref.duration}\n            </Typography>\n          </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Card>\n  );\n}\n\nexport default Player","/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/UserMusic.js",["103","104","105","106","107"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/context/index.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/context/UserContext.js",[],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmDialog.js",["108"],"/Users/devinblair/Documents/seir921/unit4/greyscale/greyscale_frontend/src/components/ConfirmUploadDialog.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":14},{"ruleId":"113","severity":1,"message":"117","line":2,"column":16,"nodeType":"115","messageId":"116","endLine":2,"endColumn":24},{"ruleId":"113","severity":1,"message":"118","line":16,"column":9,"nodeType":"115","messageId":"116","endLine":16,"endColumn":19},{"ruleId":"113","severity":1,"message":"119","line":41,"column":9,"nodeType":"115","messageId":"116","endLine":41,"endColumn":18},{"ruleId":"113","severity":1,"message":"120","line":8,"column":29,"nodeType":"115","messageId":"116","endLine":8,"endColumn":38},{"ruleId":"113","severity":1,"message":"121","line":32,"column":11,"nodeType":"115","messageId":"116","endLine":32,"endColumn":15},{"ruleId":"113","severity":1,"message":"122","line":32,"column":17,"nodeType":"115","messageId":"116","endLine":32,"endColumn":24},{"ruleId":"113","severity":1,"message":"123","line":34,"column":10,"nodeType":"115","messageId":"116","endLine":34,"endColumn":20},{"ruleId":"113","severity":1,"message":"124","line":34,"column":22,"nodeType":"115","messageId":"116","endLine":34,"endColumn":35},{"ruleId":"113","severity":1,"message":"117","line":8,"column":10,"nodeType":"115","messageId":"116","endLine":8,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":67,"column":6,"nodeType":"127","endLine":67,"endColumn":22,"suggestions":"128"},{"ruleId":"113","severity":1,"message":"129","line":24,"column":30,"nodeType":"115","messageId":"116","endLine":24,"endColumn":44},{"ruleId":"113","severity":1,"message":"122","line":36,"column":17,"nodeType":"115","messageId":"116","endLine":36,"endColumn":24},{"ruleId":"125","severity":1,"message":"130","line":66,"column":6,"nodeType":"127","endLine":66,"endColumn":13,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":143,"column":15,"nodeType":"134","endLine":143,"endColumn":80},{"ruleId":"113","severity":1,"message":"135","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":23},{"ruleId":"113","severity":1,"message":"136","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":16},{"ruleId":"113","severity":1,"message":"137","line":4,"column":9,"nodeType":"115","messageId":"116","endLine":4,"endColumn":13},{"ruleId":"113","severity":1,"message":"138","line":14,"column":8,"nodeType":"115","messageId":"116","endLine":14,"endColumn":17},{"ruleId":"113","severity":1,"message":"122","line":48,"column":30,"nodeType":"115","messageId":"116","endLine":48,"endColumn":37},{"ruleId":"113","severity":1,"message":"139","line":49,"column":10,"nodeType":"115","messageId":"116","endLine":49,"endColumn":16},{"ruleId":"113","severity":1,"message":"140","line":7,"column":10,"nodeType":"115","messageId":"116","endLine":7,"endColumn":24},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'lightTheme' is assigned a value but never used.","'darkTheme' is assigned a value but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'openDialog' is assigned a value but never used.","'setOpenDialog' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'album', 'artist', 'genre', 'isPublic', 'labelId', and 'name'. Either include them or remove the dependency array.","ArrayExpression",["143"],"'setCurrentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'artistName' and 'userId'. Either include them or remove the dependency array.",["144"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'BrowserRouter' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'UserModel' is defined but never used.","'upload' is assigned a value but never used.","'PinDropRounded' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [music, artwork, labelId, name, artist, album, isPublic, genre]",{"range":"149","text":"150"},"Update the dependencies array to be: [artistName, image, userId]",{"range":"151","text":"152"},[1941,1957],"[music, artwork, labelId, name, artist, album, isPublic, genre]",[1721,1728],"[artistName, image, userId]"]